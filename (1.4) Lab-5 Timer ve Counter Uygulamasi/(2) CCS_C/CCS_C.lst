CCS PCM C Compiler, Version 5.015, 5967               13-Ara-21 00:10

               Filename:   C:\Users\Admin\Desktop\CCS_Github_\(5) Lab-5 DUZELT VE LAB YAP-47 ------------[DUZELT]\(2) CCS_C\CCS_C.lst

               ROM used:   205 words (3%)
                           Largest free fragment is 2048
               RAM used:   15 (4%) at main() level
                           17 (5%) worst case
               Stack used: 2 locations (0 in main + 2 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   092
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.0
001A:  GOTO   01D
001B:  BTFSC  0C.0
001C:  GOTO   032
001D:  BTFSS  0B.5
001E:  GOTO   021
001F:  BTFSC  0B.2
0020:  GOTO   035
0021:  MOVF   22,W
0022:  MOVWF  04
0023:  MOVF   23,W
0024:  MOVWF  77
0025:  MOVF   24,W
0026:  MOVWF  78
0027:  MOVF   25,W
0028:  MOVWF  79
0029:  MOVF   26,W
002A:  MOVWF  7A
002B:  MOVF   20,W
002C:  MOVWF  0A
002D:  SWAPF  21,W
002E:  MOVWF  03
002F:  SWAPF  7F,F
0030:  SWAPF  7F,W
0031:  RETFIE
0032:  BCF    0A.3
0033:  BCF    0A.4
0034:  GOTO   054
0035:  BCF    0A.3
0036:  BCF    0A.4
0037:  GOTO   038
.................... #include <16f877.h>                                 
.................... //////////// Standard Header file for the PIC16F877 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877 
....................  
.................... #list 
....................  
.................... #use delay (clock = 4000000)                        
*
003F:  MOVLW  2B
0040:  MOVWF  04
0041:  BCF    03.7
0042:  MOVF   00,W
0043:  BTFSC  03.2
0044:  GOTO   053
0045:  MOVLW  01
0046:  MOVWF  78
0047:  CLRF   77
0048:  DECFSZ 77,F
0049:  GOTO   048
004A:  DECFSZ 78,F
004B:  GOTO   047
004C:  MOVLW  4A
004D:  MOVWF  77
004E:  DECFSZ 77,F
004F:  GOTO   04E
0050:  GOTO   051
0051:  DECFSZ 00,F
0052:  GOTO   045
0053:  RETURN
.................... #fuses HS,NOWDT,NOPUT,NOLVP,NOCPD,NOPROTECT,NODEBUG,NOBROWNOUT,NOWRT 
....................  
.................... #use fast_io(a) 
.................... #use fast_io(b) 
....................  
.................... int sayici = 0; 
.................... int16 zamanlayici = 0; 
....................  
.................... #int_timer0  
.................... void timer0_kesme() {   //SAYICI 
....................    set_timer0(255); 
*
0038:  MOVLW  FF
0039:  MOVWF  01
....................    sayici++; 
003A:  INCF   27,F
.................... } 
....................  
003B:  BCF    0B.2
003C:  BCF    0A.3
003D:  BCF    0A.4
003E:  GOTO   021
.................... #int_timer1 
.................... void timer1_kesme() {//ZAMANLAYICI 
....................  
....................    set_timer1(63036); 
*
0054:  CLRF   0E
0055:  MOVLW  F6
0056:  MOVWF  0F
0057:  MOVLW  3C
0058:  MOVWF  0E
....................     
....................    if(zamanlayici < 500){ 
0059:  MOVF   29,W
005A:  SUBLW  01
005B:  BTFSS  03.0
005C:  GOTO   06F
005D:  BTFSS  03.2
005E:  GOTO   063
005F:  MOVF   28,W
0060:  SUBLW  F3
0061:  BTFSS  03.0
0062:  GOTO   06F
....................     
....................       zamanlayici++; 
0063:  INCF   28,F
0064:  BTFSC  03.2
0065:  INCF   29,F
....................       output_b(sayici); 
0066:  MOVF   27,W
0067:  MOVWF  06
....................        
....................       if(sayici == 3) 
0068:  MOVF   27,W
0069:  SUBLW  03
006A:  BTFSS  03.2
006B:  GOTO   06F
....................          sayici == 0; 
006C:  MOVF   27,F
006D:  BTFSS  03.2
006E:  MOVLW  00
....................           
....................       break; 
....................    } 
....................     
....................    if(zamanlayici >= 500){ 
006F:  MOVF   29,W
0070:  SUBLW  00
0071:  BTFSC  03.0
0072:  GOTO   08E
0073:  XORLW  FF
0074:  BTFSS  03.2
0075:  GOTO   07A
0076:  MOVF   28,W
0077:  SUBLW  F3
0078:  BTFSC  03.0
0079:  GOTO   08E
....................     
....................       output_b(0x03); 
007A:  MOVLW  03
007B:  MOVWF  06
....................       delay_ms(500); 
007C:  MOVLW  02
007D:  MOVWF  2A
007E:  MOVLW  FA
007F:  MOVWF  2B
0080:  CALL   03F
0081:  DECFSZ 2A,F
0082:  GOTO   07E
....................       output_b(0x00); 
0083:  CLRF   06
....................       delay_ms(500); 
0084:  MOVLW  02
0085:  MOVWF  2A
0086:  MOVLW  FA
0087:  MOVWF  2B
0088:  CALL   03F
0089:  DECFSZ 2A,F
008A:  GOTO   086
....................        
....................       zamanlayici = 0; 
008B:  CLRF   29
008C:  CLRF   28
....................       sayici = 0; 
008D:  CLRF   27
....................        
....................       break; 
....................    } 
....................     
....................    /* 
....................    if(sayici == 2 && zamanlayici < 500){ 
....................     
....................       output_high(pin_b0); 
....................       zamanlayici++; 
....................        
....................       if(zamanlayici == 500){ 
....................        
....................       output_low(pin_b0); 
....................       zamanlayici = 0; 
....................       sayici = 0; 
....................       } 
....................    } 
....................    */ 
008E:  BCF    0C.0
008F:  BCF    0A.3
0090:  BCF    0A.4
0091:  GOTO   021
.................... } 
....................  
.................... void main(){ 
0092:  MOVF   03,W
0093:  ANDLW  1F
0094:  MOVWF  03
0095:  CLRF   27
0096:  CLRF   29
0097:  CLRF   28
0098:  BSF    03.5
0099:  BSF    1F.0
009A:  BSF    1F.1
009B:  BSF    1F.2
009C:  BCF    1F.3
009D:  BCF    03.7
....................  
....................    setup_psp(PSP_DISABLED); 
009E:  BCF    09.4
....................   // setup_timer_1(T1_DISABLED);       
....................    setup_timer_2(T2_DISABLED,0,1); 
009F:  MOVLW  00
00A0:  MOVWF  78
00A1:  BCF    03.5
00A2:  MOVWF  12
00A3:  MOVLW  00
00A4:  BSF    03.5
00A5:  MOVWF  12
....................    setup_adc_ports(NO_ANALOGS); 
00A6:  BSF    1F.0
00A7:  BSF    1F.1
00A8:  BSF    1F.2
00A9:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
00AA:  BCF    03.5
00AB:  BCF    1F.0
....................    setup_CCP1(CCP_OFF); 
00AC:  MOVLW  F0
00AD:  ANDWF  17,F
....................    setup_CCP2(CCP_OFF); 
00AE:  ANDWF  1D,F
....................     
....................    set_tris_a(0x10); 
00AF:  MOVLW  10
00B0:  BSF    03.5
00B1:  MOVWF  05
....................    set_tris_b(0x00); 
00B2:  MOVLW  00
00B3:  MOVWF  06
....................    output_b(0x00); 
00B4:  BCF    03.5
00B5:  CLRF   06
....................   
....................    setup_timer_0(RTCC_EXT_L_TO_H | RTCC_DIV_1); // HER 1 BASMADA KESMEYE GÝDER (1x1) 
00B6:  BSF    03.5
00B7:  MOVF   01,W
00B8:  ANDLW  C7
00B9:  IORLW  28
00BA:  MOVWF  01
....................    set_timer0(255); 
00BB:  MOVLW  FF
00BC:  BCF    03.5
00BD:  MOVWF  01
....................     
....................    setup_timer_1(T1_INTERNAL | T1_DIV_BY_8);  // HER 0.02 SANÝYEDE KESMEYE GÝDER (8x2500x10^-6) 
00BE:  MOVLW  B5
00BF:  MOVWF  10
....................    set_timer1(63036); 
00C0:  CLRF   0E
00C1:  MOVLW  F6
00C2:  MOVWF  0F
00C3:  MOVLW  3C
00C4:  MOVWF  0E
....................     
....................    enable_interrupts(INT_timer0); 
00C5:  BSF    0B.5
....................    enable_interrupts(INT_timer1); 
00C6:  BSF    03.5
00C7:  BSF    0C.0
....................    enable_interrupts(GLOBAL); 
00C8:  MOVLW  C0
00C9:  BCF    03.5
00CA:  IORWF  0B,F
....................     
....................    while(1); 
00CB:  GOTO   0CB
.................... } 
00CC:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
