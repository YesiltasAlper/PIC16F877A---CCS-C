CCS PCM C Compiler, Version 5.015, 5967               04-Kas-21 20:10

               Filename:   C:\Users\Admin\Desktop\CCS_Github_\(20) RB0 Harici_Kesme\(2) CCS_C\CCS_C.lst

               ROM used:   127 words (2%)
                           Largest free fragment is 2048
               RAM used:   12 (3%) at main() level
                           13 (4%) worst case
               Stack used: 2 locations (0 in main + 2 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   056
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  BTFSS  0B.4
0018:  GOTO   01B
0019:  BTFSC  0B.1
001A:  GOTO   02C
001B:  MOVF   22,W
001C:  MOVWF  04
001D:  MOVF   23,W
001E:  MOVWF  77
001F:  MOVF   24,W
0020:  MOVWF  78
0021:  MOVF   25,W
0022:  MOVWF  79
0023:  MOVF   26,W
0024:  MOVWF  7A
0025:  MOVF   20,W
0026:  MOVWF  0A
0027:  SWAPF  21,W
0028:  MOVWF  03
0029:  SWAPF  7F,F
002A:  SWAPF  7F,W
002B:  RETFIE
002C:  BCF    0A.3
002D:  BCF    0A.4
002E:  GOTO   044
.................... #include <16f877.h>                                 
.................... //////////// Standard Header file for the PIC16F877 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877 
....................  
.................... #list 
....................  
.................... #use delay (clock = 4000000)                        
002F:  MOVLW  27
0030:  MOVWF  04
0031:  BCF    03.7
0032:  MOVF   00,W
0033:  BTFSC  03.2
0034:  GOTO   043
0035:  MOVLW  01
0036:  MOVWF  78
0037:  CLRF   77
0038:  DECFSZ 77,F
0039:  GOTO   038
003A:  DECFSZ 78,F
003B:  GOTO   037
003C:  MOVLW  4A
003D:  MOVWF  77
003E:  DECFSZ 77,F
003F:  GOTO   03E
0040:  GOTO   041
0041:  DECFSZ 00,F
0042:  GOTO   035
0043:  RETURN
.................... #fuses XT,HS,NOWDT,NOPUT,NOLVP,NOCPD,NOPROTECT,NODEBUG,NOBROWNOUT,NOWRT  
....................  
.................... #use fast_io(b) 
....................  
.................... #int_ext                // Harici kesme bildirme syntax 
.................... void dis_kesme(){       // Kesmede ne yapýlacaksa o fonksiyon 
....................    
....................   while(1){ 
....................     
....................       output_high(pin_b1); 
0044:  BSF    06.1
....................       delay_us(1000); 
0045:  MOVLW  01
0046:  MOVWF  27
0047:  CALL   02F
....................       output_low(pin_b1); 
0048:  BCF    06.1
....................       delay_us(1000); 
0049:  MOVLW  01
004A:  MOVWF  27
004B:  CALL   02F
....................        
....................       if(input(pin_a0) == 1) 
004C:  BSF    03.5
004D:  BSF    05.0
004E:  BCF    03.5
004F:  BTFSC  05.0
....................          break; 
0050:  GOTO   052
0051:  GOTO   044
....................   } 
....................    
0052:  BCF    0B.1
0053:  BCF    0A.3
0054:  BCF    0A.4
0055:  GOTO   01B
.................... } 
....................  
....................  
.................... void main() 
0056:  MOVF   03,W
0057:  ANDLW  1F
0058:  MOVWF  03
0059:  BSF    03.5
005A:  BSF    1F.0
005B:  BSF    1F.1
005C:  BSF    1F.2
005D:  BCF    1F.3
005E:  BCF    03.7
.................... { 
....................    setup_psp(PSP_DISABLED); 
005F:  BCF    09.4
....................    setup_timer_1(T1_DISABLED); 
0060:  BCF    03.5
0061:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
0062:  MOVLW  00
0063:  MOVWF  78
0064:  MOVWF  12
0065:  MOVLW  00
0066:  BSF    03.5
0067:  MOVWF  12
....................    setup_adc_ports(NO_ANALOGS); 
0068:  BSF    1F.0
0069:  BSF    1F.1
006A:  BSF    1F.2
006B:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
006C:  BCF    03.5
006D:  BCF    1F.0
....................    setup_CCP1(CCP_OFF); 
006E:  MOVLW  F0
006F:  ANDWF  17,F
....................    setup_CCP2(CCP_OFF); 
0070:  ANDWF  1D,F
....................     
....................    set_tris_a(0x01); 
0071:  MOVLW  01
0072:  BSF    03.5
0073:  MOVWF  05
....................    set_tris_b(0x01); 
0074:  MOVWF  06
....................    output_b(0x00); 
0075:  BCF    03.5
0076:  CLRF   06
....................     
....................    while(1){ 
....................     
....................       ext_int_edge(H_TO_L);         // High to Low yani dusen kenarda demektir 
0077:  BSF    03.5
0078:  BCF    01.6
....................       enable_interrupts(INT_EXT);   // Kesmeyi aktif etmek icin 
0079:  BCF    03.5
007A:  BSF    0B.4
....................       enable_interrupts(GLOBAL);    // Aktif edilen kesmelere izin verilir 
007B:  MOVLW  C0
007C:  IORWF  0B,F
007D:  GOTO   077
....................    } 
....................    
.................... } 
007E:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
