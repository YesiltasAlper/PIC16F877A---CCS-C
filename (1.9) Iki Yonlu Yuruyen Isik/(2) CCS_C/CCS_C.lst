CCS PCM C Compiler, Version 5.015, 5967               04-Kas-21 14:51

               Filename:   C:\Users\Admin\Desktop\CCS_Github_\(3) Iki_Yonlu_Yuruyen_Isik\(2) CCS_C\CCS_C.lst

               ROM used:   114 words (1%)
                           Largest free fragment is 2048
               RAM used:   6 (2%) at main() level
                           11 (3%) worst case
               Stack used: 1 locations
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   019
0003:  NOP
.................... #include <16f877.h>                                 
.................... //////////// Standard Header file for the PIC16F877 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877 
....................  
.................... #list 
....................  
.................... #use delay (clock = 4000000)                        
0004:  MOVLW  26
0005:  MOVWF  04
0006:  BCF    03.7
0007:  MOVF   00,W
0008:  BTFSC  03.2
0009:  GOTO   018
000A:  MOVLW  01
000B:  MOVWF  78
000C:  CLRF   77
000D:  DECFSZ 77,F
000E:  GOTO   00D
000F:  DECFSZ 78,F
0010:  GOTO   00C
0011:  MOVLW  4A
0012:  MOVWF  77
0013:  DECFSZ 77,F
0014:  GOTO   013
0015:  GOTO   016
0016:  DECFSZ 00,F
0017:  GOTO   00A
0018:  RETURN
.................... #fuses HS,NOWDT,NOPUT,NOLVP,NOCPD,NOPROTECT,NODEBUG,NOBROWNOUT,NOWRT  
....................  
.................... #use fast_io(a) 
.................... #use fast_io(b) 
....................  
.................... void main(){ 
0019:  MOVF   03,W
001A:  ANDLW  1F
001B:  MOVWF  03
001C:  BSF    03.5
001D:  BSF    1F.0
001E:  BSF    1F.1
001F:  BSF    1F.2
0020:  BCF    1F.3
0021:  BCF    03.7
....................  
....................    setup_psp(PSP_DISABLED); 
0022:  BCF    09.4
....................    setup_timer_1(T1_DISABLED); 
0023:  BCF    03.5
0024:  CLRF   10
....................    setup_timer_2(T2_DISABLED,0,1); 
0025:  MOVLW  00
0026:  MOVWF  78
0027:  MOVWF  12
0028:  MOVLW  00
0029:  BSF    03.5
002A:  MOVWF  12
....................    setup_adc_ports(NO_ANALOGS); 
002B:  BSF    1F.0
002C:  BSF    1F.1
002D:  BSF    1F.2
002E:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
002F:  BCF    03.5
0030:  BCF    1F.0
....................    setup_CCP1(CCP_OFF); 
0031:  MOVLW  F0
0032:  ANDWF  17,F
....................    setup_CCP2(CCP_OFF); 
0033:  ANDWF  1D,F
....................     
....................    set_tris_a(0x03);  
0034:  MOVLW  03
0035:  BSF    03.5
0036:  MOVWF  05
....................    set_tris_b(0x00);  
0037:  MOVLW  00
0038:  MOVWF  06
....................     
....................    output_b(0x00); 
0039:  BCF    03.5
003A:  CLRF   06
....................     
....................    while(1){ 
....................     
....................       if(input(pin_a0) == 1){ 
003B:  BTFSS  05.0
003C:  GOTO   056
....................        
....................          int x= 1; 
003D:  MOVLW  01
003E:  MOVWF  21
....................        
....................          for(int i=0; i<8; i++){ 
003F:  CLRF   22
0040:  MOVF   22,W
0041:  SUBLW  07
0042:  BTFSS  03.0
0043:  GOTO   055
....................        
....................             output_b(x); 
0044:  MOVF   21,W
0045:  MOVWF  06
....................             delay_ms(500); 
0046:  MOVLW  02
0047:  MOVWF  25
0048:  MOVLW  FA
0049:  MOVWF  26
004A:  CALL   004
004B:  DECFSZ 25,F
004C:  GOTO   048
....................             x=x<<1; 
004D:  BCF    03.0
004E:  RLF    21,F
....................        
....................          if(input(pin_a0) == 1) 
004F:  BTFSC  05.0
....................             break; 
0050:  GOTO   055
....................           
....................          if(input(pin_a1) == 1) 
0051:  BTFSC  05.1
....................             break; 
0052:  GOTO   055
0053:  INCF   22,F
0054:  GOTO   040
....................              
....................          } 
....................           
....................       } 
0055:  GOTO   070
....................   
....................       else if(input(pin_a1) == 1){ 
0056:  BTFSS  05.1
0057:  GOTO   070
....................        
....................          int y = 128; 
0058:  MOVLW  80
0059:  MOVWF  23
....................           
....................          for(int i=0; i<8; i++){ 
005A:  CLRF   24
005B:  MOVF   24,W
005C:  SUBLW  07
005D:  BTFSS  03.0
005E:  GOTO   070
....................           
....................             output_b(y); 
005F:  MOVF   23,W
0060:  MOVWF  06
....................             delay_ms(500); 
0061:  MOVLW  02
0062:  MOVWF  25
0063:  MOVLW  FA
0064:  MOVWF  26
0065:  CALL   004
0066:  DECFSZ 25,F
0067:  GOTO   063
....................             y = y>>1; 
0068:  BCF    03.0
0069:  RRF    23,F
....................              
....................           if(input(pin_a1) == 1) 
006A:  BTFSC  05.1
....................             break; 
006B:  GOTO   070
....................              
....................           if(input(pin_a0) == 1) 
006C:  BTFSC  05.0
....................             break; 
006D:  GOTO   070
006E:  INCF   24,F
006F:  GOTO   05B
....................          } 
....................            
....................       } 
0070:  GOTO   03B
....................        
....................    } 
....................     
.................... } 
0071:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
