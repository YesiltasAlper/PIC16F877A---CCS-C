CCS PCM C Compiler, Version 5.015, 5967               13-Ara-21 16:36

               Filename:   C:\Users\Admin\Desktop\CCS_Github_\(27) Timer2_8bit_Sayici\(2) CCS_C\CCS_C.lst

               ROM used:   107 words (1%)
                           Largest free fragment is 2048
               RAM used:   13 (4%) at main() level
                           13 (4%) worst case
               Stack used: 1 locations (0 in main + 1 for interrupts)
               Stack size: 8

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   038
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  BCF    03.7
0016:  BCF    03.5
0017:  MOVLW  8C
0018:  MOVWF  04
0019:  BTFSS  00.1
001A:  GOTO   01D
001B:  BTFSC  0C.1
001C:  GOTO   02E
001D:  MOVF   22,W
001E:  MOVWF  04
001F:  MOVF   23,W
0020:  MOVWF  77
0021:  MOVF   24,W
0022:  MOVWF  78
0023:  MOVF   25,W
0024:  MOVWF  79
0025:  MOVF   26,W
0026:  MOVWF  7A
0027:  MOVF   20,W
0028:  MOVWF  0A
0029:  SWAPF  21,W
002A:  MOVWF  03
002B:  SWAPF  7F,F
002C:  SWAPF  7F,W
002D:  RETFIE
002E:  BCF    0A.3
002F:  BCF    0A.4
0030:  GOTO   031
.................... #include <16f877.h>                                 
.................... //////////// Standard Header file for the PIC16F877 device //////////////// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... ////        (C) Copyright 1996, 2013 Custom Computer Services          //// 
.................... //// This source code may only be used by licensed users of the CCS C  //// 
.................... //// compiler.  This source code may only be distributed to other      //// 
.................... //// licensed users of the CCS C compiler.  No other use, reproduction //// 
.................... //// or distribution is permitted without written permission.          //// 
.................... //// Derivative programs created using this software in object code    //// 
.................... //// form are not restricted in any way.                               //// 
.................... /////////////////////////////////////////////////////////////////////////// 
.................... #device PIC16F877 
....................  
.................... #list 
....................  
.................... #use delay (clock = 4000000)                       
.................... #fuses HS,NOWDT,NOPUT,NOLVP,NOCPD,NOPROTECT,NODEBUG,NOBROWNOUT,NOWRT 
....................  
.................... #use fast_io(a) 
.................... #use fast_io(b) 
....................  
.................... unsigned int i = 0; 
....................  
.................... #int_timer2  
.................... void timer2_kesme(){       // Kesme olusma suresi = Tkomut * (Bolme orani) * (PR2 Degeri + 1) * (Postscaler degeri) 
....................                            // Kesme olusma suresi = (1^10-6 sn) * (16) * (250 + 1) * (16) = 0.64 sn 
....................    i++; 
0031:  INCF   27,F
....................     
....................    output_high(pin_b0); 
0032:  BSF    06.0
....................    output_low(pin_b0); 
0033:  BCF    06.0
0034:  BCF    0C.1
0035:  BCF    0A.3
0036:  BCF    0A.4
0037:  GOTO   01D
.................... } 
....................  
.................... void main(){ 
0038:  MOVF   03,W
0039:  ANDLW  1F
003A:  MOVWF  03
003B:  CLRF   27
003C:  BSF    03.5
003D:  BSF    1F.0
003E:  BSF    1F.1
003F:  BSF    1F.2
0040:  BCF    1F.3
0041:  BCF    03.7
.................... 	 
....................    setup_psp(PSP_DISABLED); 
0042:  BCF    09.4
....................    setup_timer_1(T1_DISABLED);       
0043:  BCF    03.5
0044:  CLRF   10
....................   // setup_timer_2(T2_DISABLED,0,1); 
....................    setup_adc_ports(NO_ANALOGS); 
0045:  BSF    03.5
0046:  BSF    1F.0
0047:  BSF    1F.1
0048:  BSF    1F.2
0049:  BCF    1F.3
....................    setup_adc(ADC_OFF); 
004A:  BCF    03.5
004B:  BCF    1F.0
....................    setup_CCP1(CCP_OFF); 
004C:  MOVLW  F0
004D:  ANDWF  17,F
....................    setup_CCP2(CCP_OFF); 
004E:  ANDWF  1D,F
....................     
....................    set_tris_a(0x01); 
004F:  MOVLW  01
0050:  BSF    03.5
0051:  MOVWF  05
....................    set_tris_b(0x00); 
0052:  MOVLW  00
0053:  MOVWF  06
....................     
....................    output_b(0x00); 
0054:  BCF    03.5
0055:  CLRF   06
....................   
....................    setup_timer_2(T2_DIV_BY_16,250,16);  
0056:  MOVLW  78
0057:  MOVWF  78
0058:  IORLW  06
0059:  MOVWF  12
005A:  MOVLW  FA
005B:  BSF    03.5
005C:  MOVWF  12
....................    set_timer2(5); 
005D:  MOVLW  05
005E:  BCF    03.5
005F:  MOVWF  11
....................     
....................    enable_interrupts(INT_timer2); 
0060:  BSF    03.5
0061:  BSF    0C.1
....................    enable_interrupts(GLOBAL); 
0062:  MOVLW  C0
0063:  BCF    03.5
0064:  IORWF  0B,F
....................     
....................    while(1){ 
....................        
....................       if(input(pin_a0)) 
0065:  BTFSS  05.0
0066:  GOTO   069
....................       output_b(i); 
0067:  MOVF   27,W
0068:  MOVWF  06
0069:  GOTO   065
....................    } 
....................   
.................... } 
006A:  SLEEP

Configuration Fuses:
   Word  1: 3F3A   HS NOWDT NOPUT NOBROWNOUT NOLVP NOCPD NOWRT NODEBUG NOPROTECT
